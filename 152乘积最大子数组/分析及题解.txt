//   https://leetcode-cn.com/problems/maximum-product-subarray/
class Solution {
    /* dp:
         (1)遍历数组时计算当前最大值，不断更新
         (2)令imax为当前最大值，则当前最大值为 imax = max(imax * nums[i], nums[i])
         由于存在负数，那么会导致最大的变最小的，最小的变最大的。因此还需要维护当前最小值imin，imin = min(imin * nums[i], nums[i])
         (3)当负数出现时则imax与imin进行交换再进行下一步计算
    */
    public int maxProduct(int[] nums) {
        int max=Integer.MIN_VALUE;//结果最大值   
        int imax=1;  int  imin=1;
        for(int i=0;i<nums.length;i++){
            //(3)
            if(nums[i]<0){
                int temp=imax;
                imax=imin;
                imin=temp;
            }
            //(1)    (2)
            imax=Math.max(imax*nums[i],nums[i]);
            imin=Math.min(imin*nums[i],nums[i]);
            //更新max
            max=Math.max(max,imax);
        }
        return max;
    }
}