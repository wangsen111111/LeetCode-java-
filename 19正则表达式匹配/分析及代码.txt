//链接：https://leetcode-cn.com/problems/zheng-ze-biao-da-shi-pi-pei-lcof/
class Solution {
    //dp
    public boolean isMatch(String A, String B) {
        int n = A.length();
        int m = B.length();
        boolean[][] f = new boolean[n + 1][m + 1];
        for(int i=0;i<=n;i++){
            for(int j=0;j<=m;j++){
                if(j == 0){
                    //如果B为空正则, A为空正则 0==0 返回true； 否则返回false
                    f[i][j] = i == 0;
                }else{
                    //B不为空正则
                    if (B.charAt(j - 1) != '*') {
                        //(1)B的最后一个字符是正常字符 || B的最后一个字符是.
                        if (i > 0 && (A.charAt(i - 1) == B.charAt(j - 1) || B.charAt(j - 1) == '.')){
                            f[i][j] = f[i - 1][j - 1];
                        }
                    }else{
                        //(2)如果B的最后一个字符是*它代表 B[m-2]=c可以重复0次或多次，它们是一个整体 c*
                        //1,
                         if (i >= 1 && j >= 2 && (A.charAt(i - 1) == B.charAt(j - 2) 
                            || B.charAt(j - 2) == '.')) {
                            f[i][j] |= f[i - 1][j];
                        }
                        //2,  A[i-1]是0个c
                        if (j >= 2) {
                            f[i][j] |= f[i][j - 2];
                        }
                    }
                }
            }
        }
        return f[n][m];
    }
}
