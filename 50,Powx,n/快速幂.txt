//快速幂–>实际上是分治思想
//每次递归都会使得指数减少一半，因此递归的层数为 O(\log n)O(logn)，
//算法可以在很快的时间内得到结果。
 public double myPow(double x, int n) {
        if(n==Integer.MIN_VALUE)
            return (x==1||x==-1) ?1:0;
            else if(n==0) return 1;
        if(n<0) return myPow(1/x,-n);
        if(n%2==0) return myPow(x*x,n/2);
        else return x*myPow(x,n-1);    
    }
