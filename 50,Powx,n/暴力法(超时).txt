//  https://leetcode-cn.com/problems/powx-n/
//1，暴力法：超时
//思路1：循环计算 n次 x相乘，时间复杂度O(n), 当n非常大时，效率低
    public static double myPow(double x, int n) {
        if(n==0) return 1.0;
        double result = 1;
        if (n >0) {
            for (int i = 0; i < n; i++) {
                result*=x;
            }
        } else {
            n=-n;
            for (int i = 0; i < n; i++) {
                result*=x;
            }
            result=1 / result;
        }
        return  result;
    }
